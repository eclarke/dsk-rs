# name: myapp
# version: "1.0"
# author: Kevin K. <kbknapp@gmail.com>
# about: Does awesome things
# args:
#     - config:
#         short: c
#         long: config
#         value_name: FILE
#         help: Sets a custom config file
#         takes_value: true
#     - INPUT:
#         help: Sets the input file to use
#         required: true
#         index: 1
#     - verbose:
#         short: v
#         multiple: true
#         help: Sets the level of verbosity
# subcommands:
#     - test:
#         about: controls testing features
#         version: "1.3"
#         author: Someone E. <someone_else@other.com>
#         args:
#             - debug:
#                 short: d
#                 help: print debug information

name: dsk
version: "0.2"
author: "Erik Clarke"
about: Disk streaming of kmers, implemented in Rust
args:
    - input:
        required: true
        help: input file, in FASTA (or FASTQ, with -q flag) format
        takes_value: true
        index: 1
    - k:
        help: length of kmers to count, in nucleotides
        short: k
        takes_value: true
        default_value: "27"
    - max_mem:
        help: max RAM to use, in GB
        short: m
        long: max_mem
        takes_value: true
        default_value: "2"
    - max_disk:
        help: max disk space to use, in GB
        short: d
        long: max_disk
        takes_value: true
        default_value: "3"
    - fastq:
        help: "input is in FASTQ format (default: FASTA)"
        short: q
        long: fastq
    - alphabet:
        help: "Nucleotide alphabet to use.\nDNA = ATGC; dna = ATGCatgc; dna+n = ATGCNatgcn; iupac = all IUPAC nucleotide symbols.\nUse the smallest applicable for your sequences; large alphabets slow down counting.\n"
        short: a
        long: alphabet
        possible_values: ["dna", "DNA", "dna+N", "iupac"]
        takes_value: true
        default_value: DNA
